{"version":3,"sources":["misc/firebase.js","pages/Signin.js","misc/CustomHooks.js","components/CreateRoomBtnModal.js","context/profile.context.js","components/EditableInput.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadbtn.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","context/current-room.context.js","components/chat-window/messages/ImageBtnModal.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","components/chat-window/top/RoominfoBtnModal.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","Signin","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","useModalState","defaultValue","useState","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","useEffect","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setformValue","isLoading","setisLoading","formRef","useRef","onFormChange","value","onSubmit","current","check","newRoomData","admins","currentUser","push","info","Modal","show","onHide","backdrop","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","setIsLoading","userRef","userStatusRef","authUnSub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","useProfile","useContext","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","getNameInitials","splitName","toUpperCase","split","length","transformToArrwithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMessages","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","ProviderBlock","providerData","some","providerId","isConnected","setisConnected","updateIsConnected","unLink","unlink","Link","linkWithPopup","Tag","closable","onClose","DashBoard","onSignOut","newData","Drawer","Divider","AvatarUploadbtn","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setrooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","size","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","vertical","reversed","style","activeKey","pathname","Loader","center","content","speed","to","eventKey","Sidebar","topSidebarRef","setheight","scrollHeight","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","ImageBtnModal","fileName","alt","href","rel","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","cirlce","renderFileMessage","contentType","url","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","likeCount","isAdmin","v","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","memo","messagesRef","Messages","chatId","useParams","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessage","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminsRef","transaction","alertMsg","msgId","messageRef","msg","confirm","isLast","refFromURL","fileRef","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","RoominfoBtnModal","EditRoomBtnDrawer","updateData","newName","newDescription","Top","ButtonToolbar","AttachmentBtnModal","afterUpload","FileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","Uploader","autoUpload","action","fileList","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","Bottom","onSendClick","msgData","messageId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","Chat","contet","speen","currentRoom","find","currentRoomData","Index","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PrivateRoute","routeProps","PublicRoute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42613761.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: 'AIzaSyAeruFobgOf4EEEIzRU9UImjFupJ-zI9b0',\n  authDomain: 'chat-web-app-fccf6.firebaseapp.com',\n  projectId: 'chat-web-app-fccf6',\n  storageBucket: 'chat-web-app-fccf6.appspot.com',\n  messagingSenderId: '891880887658',\n  appId: '1:891880887658:web:6fff5e39128be492068113',\n};\n\nconst app = firebase.initializeApp(config);\n\nexport const auth = app.auth();\nexport const database = app.database();\nexport const storage = app.storage();\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite';\nimport { auth, database } from '../misc/firebase';\n\nfunction Signin() {\n  const signInWithProvider = async provider => {\n    try {\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n      if (additionalUserInfo.isNewUser) {\n        await database.ref(`/profiles/${user.uid}`).set({\n          name: user.displayName,\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\n        });\n      }\n\n      Alert.success('Signed In', 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const onFacebookSignin = () => {\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\n  };\n  const onGoogleSignin = () => {\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <Container>\n      <Grid className=\"mt-page\">\n        <Row>\n          <Col xs={24} md={12} mdOffset={6}>\n            <Panel>\n              <div className=\"text-center\">\n                <h2>Welcome to Chat</h2>\n                <p>Progressive Chat Platform for coders</p>\n              </div>\n              <div className=\"mt-3\">\n                <Button block color=\"blue\" onClick={onFacebookSignin}>\n                  <Icon icon=\"facebook\" /> Continue with facebook\n                </Button>\n                <Button block color=\"green\" onClick={onGoogleSignin}>\n                  <Icon icon=\"google\" /> Continue with Google\n                </Button>\n              </div>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Signin;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { database } from './firebase';\n\nexport function useModalState(defaultValue = false) {\n  const [isOpen, setIsOpen] = useState(defaultValue);\n\n  const open = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const close = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  return { isOpen, open, close };\n}\n\nexport const useMediaQuery = query => {\n  const [matches, setMatches] = useState(\n    () => window.matchMedia(query).matches\n  );\n\n  useEffect(() => {\n    const queryList = window.matchMedia(query);\n    setMatches(queryList.matches);\n\n    const listener = evt => setMatches(evt.matches);\n\n    queryList.addListener(listener);\n    return () => queryList.removeListener(listener);\n  }, [query]);\n\n  return matches;\n};\n\nexport function usePresence(uid) {\n  const [presence, setPresence] = useState(null);\n\n  useEffect(() => {\n    const userStatusRef = database.ref(`/status/${uid}`);\n    userStatusRef.on('value', snap => {\n      if (snap.exists()) {\n        const data = snap.val();\n\n        setPresence(data);\n      }\n    });\n\n    return () => {\n      userStatusRef.off();\n    };\n  }, [uid]);\n\n  return presence;\n}\n\nexport function useHover() {\n  const [value, setValue] = useState(false);\n  const ref = useRef(null);\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n      }\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    },\n    [] // Recall only if ref changes\n  );\n  return [ref, value];\n}\n","import React, { useCallback, useRef, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  Icon,\n  Modal,\n  Schema,\n} from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useModalState } from '../misc/CustomHooks';\nimport { auth, database } from '../misc/firebase';\n\nconst { StringType } = Schema.Types;\n\nconst model = Schema.Model({\n  name: StringType().isRequired('Chat name is Required'),\n  description: StringType().isRequired('Chat description is Required'),\n});\n\nconst INITIAL_FORM = {\n  name: '',\n  description: '',\n};\n\nconst CreateRoomBtnModal = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const [formValue, setformValue] = useState(INITIAL_FORM);\n  const [isLoading, setisLoading] = useState(false);\n  const formRef = useRef();\n\n  const onFormChange = useCallback(value => {\n    setformValue(value);\n  }, []);\n\n  const onSubmit = async () => {\n    if (!formRef.current.check()) {\n      return;\n    }\n    setisLoading(true);\n\n    const newRoomData = {\n      ...formValue,\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\n      admins: {\n        [auth.currentUser.uid]: true,\n      },\n    };\n\n    try {\n      await database.ref(`rooms`).push(newRoomData);\n\n      Alert.info(`${formValue.name} Created Successfully`, 4000);\n\n      setisLoading(false);\n      setformValue(INITIAL_FORM);\n      close();\n    } catch (err) {\n      setisLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-2\">\n      <Button block color=\"green\" onClick={open}>\n        <Icon icon=\"creative\" /> Create New Chat Room\n      </Button>\n\n      <Modal show={isOpen} onHide={close} backdrop=\"static\">\n        <Modal.Header>\n          <Modal.Title>New Chat Room</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form\n            fluid\n            onChange={onFormChange}\n            formValue={formValue}\n            model={model}\n            ref={formRef}\n          >\n            <FormGroup>\n              <ControlLabel>Room Name</ControlLabel>\n              <FormControl name=\"name\" placeholder=\"Enter Chat room name...\" />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>Description</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                rows={5}\n                name=\"description\"\n                placeholder=\"Enter Room Description...\"\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            block\n            appearance=\"primary\"\n            onClick={onSubmit}\n            disabled={isLoading}\n          >\n            Create new Chat Room\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateRoomBtnModal;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { auth, database } from '../misc/firebase';\n\nexport const isOfflineForDatabase = {\n  state: 'offline',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst isOnlineForDatabase = {\n  state: 'online',\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\n};\n\nconst ProfileContext = createContext();\n\nexport const ProfileProvider = ({ children }) => {\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let userRef;\n    let userStatusRef;\n    const authUnSub = auth.onAuthStateChanged(authObj => {\n      if (authObj) {\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\n        userRef = database.ref(`/profiles/${authObj.uid}`);\n\n        userRef.on('value', snap => {\n          const { name, createdAt, avatar } = snap.val();\n          const data = {\n            name,\n            createdAt,\n            avatar,\n            uid: authObj.uid,\n            email: authObj.email,\n          };\n          setProfile(data);\n          setIsLoading(false);\n        });\n\n        database.ref('.info/connected').on('value', snapshot => {\n          // If we're not currently connected, don't do anything.\n          if (!!snapshot.val() === false) {\n            return;\n          }\n\n          userStatusRef\n            .onDisconnect()\n            .set(isOfflineForDatabase)\n            .then(() => {\n              userStatusRef.set(isOnlineForDatabase);\n            });\n        });\n      } else {\n        if (userRef) {\n          userRef.off();\n        }\n        if (userStatusRef) {\n          userStatusRef.off();\n        }\n\n        database.ref('.info/connected').off();\n\n        setProfile(null);\n        setIsLoading(false);\n      }\n    });\n\n    return () => {\n      authUnSub();\n      database.ref('.info/connected').off();\n\n      if (userRef) {\n        userRef.off();\n      }\n\n      if (userStatusRef) {\n        userStatusRef.off();\n      }\n    };\n  }, []);\n\n  return (\n    <ProfileContext.Provider value={{ isLoading, profile }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => useContext(ProfileContext);\n","/* eslint-disable arrow-body-style */\nimport React, { useCallback, useState } from 'react';\nimport { Icon, InputGroup, Input, Alert } from 'rsuite';\n\nconst EditableInput = ({\n  initialValue,\n  onSave,\n  label = null,\n  // placeholder = 'Write your Value',\n  emptyMsg = 'Input is empty',\n  wrapperClassName = '',\n  ...inputProps\n}) => {\n  const [input, setInput] = useState(initialValue);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onEditClick = useCallback(() => {\n    setIsEditable(p => !p);\n    setInput(initialValue);\n  }, [initialValue]);\n\n  const onSaveClick = async () => {\n    const trimmed = input.trim();\n    if (trimmed === '') {\n      Alert.info(emptyMsg, 4000);\n    }\n    if (trimmed !== initialValue) {\n      await onSave(trimmed);\n    }\n\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={wrapperClassName}>\n      {label}\n      <InputGroup>\n        <Input\n          {...inputProps}\n          disabled={!isEditable}\n          // placeholder={placeholder}\n          value={input}\n          onChange={onInputChange}\n        />\n        <InputGroup.Button onClick={onEditClick}>\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\n        </InputGroup.Button>\n        {isEditable && (\n          <InputGroup.Button onClick={onSaveClick}>\n            <Icon icon=\"check\" />\n          </InputGroup.Button>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default EditableInput;\n","export function getNameInitials(name) {\n  const splitName = name.toUpperCase().split(' ');\n\n  if (splitName.length > 1) {\n    return splitName[0][0] + splitName[1][0];\n  }\n\n  return splitName[0][0];\n}\n\nexport function transformToArr(snapVal) {\n  return snapVal ? Object.keys(snapVal) : [];\n}\n\nexport function transformToArrwithId(snapVal) {\n  return snapVal\n    ? Object.keys(snapVal).map(roomId => ({ ...snapVal[roomId], id: roomId }))\n    : [];\n}\n\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\n  const updates = {};\n\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\n\n  const getMessages = db\n    .ref('/messages')\n    .orderByChild('author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const getRooms = db\n    .ref('/rooms')\n    .orderByChild('lastMessage/author/uid')\n    .equalTo(userId)\n    .once('value');\n\n  const [mSnap, rSnap] = await Promise.all([getMessages, getRooms]);\n\n  mSnap.forEach(msgSnap => {\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\n  });\n  rSnap.forEach(roomSnap => {\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\n  });\n\n  return updates;\n}\n\nexport function groupBy(array, groupingKeyFn) {\n  return array.reduce((result, item) => {\n    const groupingKey = groupingKeyFn(item);\n\n    if (!result[groupingKey]) {\n      result[groupingKey] = [];\n    }\n    result[groupingKey].push(item);\n\n    return result;\n  }, {});\n}\n","import React from 'react';\nimport { Avatar } from 'rsuite';\nimport { getNameInitials } from '../misc/helpers';\n\nconst ProfileAvatar = ({ name, ...avatarProps }) => (\n  <Avatar circle {...avatarProps}>\n    {getNameInitials(name)}\n  </Avatar>\n);\n\nexport default ProfileAvatar;\n","/* eslint-disable arrow-body-style */\nimport React, { useState, useRef } from 'react';\nimport { Modal, Button, Alert } from 'rsuite';\nimport AvatarEditor from 'react-avatar-editor';\nimport { useModalState } from '../../misc/CustomHooks';\nimport { database, storage } from '../../misc/firebase';\nimport { useProfile } from '../../context/profile.context';\nimport ProfileAvatar from '../ProfileAvatar';\nimport { getUserUpdates } from '../../misc/helpers';\n\nconst fileInputTypes = '.png, .jpeg, .jpg';\n\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\nconst getBlob = canvas => {\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject(new Error('File Process Error'));\n      }\n    });\n  });\n};\n\nconst AvatarUploadBtn = () => {\n  const { isOpen, open, close } = useModalState();\n\n  const { profile } = useProfile();\n\n  const [img, setImg] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const avatarEditorRef = useRef();\n\n  const onFileInputChange = ev => {\n    const currFiles = ev.target.files;\n\n    if (currFiles.length === 1) {\n      const file = currFiles[0];\n\n      if (isValidFile(file)) {\n        setImg(file);\n\n        open();\n      } else {\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\n      }\n    }\n  };\n\n  const onUploadClick = async () => {\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\n\n    setisLoading(true);\n    try {\n      const blob = await getBlob(canvas);\n\n      const avatarFileRef = storage\n        .ref(`/profile/${profile.uid}`)\n        .child('avatar');\n\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\n        cacheControl: `public,max-age=${3600 * 24 * 3}`,\n      });\n\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\n\n      const updates = await getUserUpdates(\n        profile.uid,\n        'avatar',\n        downloadUrl,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      setisLoading(false);\n      Alert.info('Avatar has been uploaded', 4000);\n    } catch (err) {\n      setisLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <div className=\"mt-3 text-center\">\n      <ProfileAvatar\n        src={profile.avatar}\n        name={profile.name}\n        className=\"width-200 height-200 img-fullsize font-huge\"\n      />\n\n      <div>\n        <label\n          htmlFor=\"avatar-upload\"\n          className=\"d-block cursor-pointer padded\"\n        >\n          Select new avatar\n          <input\n            id=\"avatar-upload\"\n            type=\"file\"\n            className=\"d-none\"\n            accept={fileInputTypes}\n            onChange={onFileInputChange}\n          />\n        </label>\n\n        <Modal show={isOpen} onHide={close}>\n          <Modal.Header>\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n              {img && (\n                <AvatarEditor\n                  ref={avatarEditorRef}\n                  image={img}\n                  width={200}\n                  height={200}\n                  border={10}\n                  borderRadius={100}\n                  rotate={0}\n                />\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              block\n              appearance=\"ghost\"\n              onClick={onUploadClick}\n              disabled={isLoading}\n            >\n              Upload new avatar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarUploadBtn;\n","/* eslint-disable arrow-body-style */\nimport React, { useState } from 'react';\nimport { Alert, Button, Icon, Tag } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { auth } from '../../misc/firebase';\n\nconst ProviderBlock = () => {\n  const [isConnected, setisConnected] = useState({\n    'google.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'google.com'\n    ),\n    'facebook.com': auth.currentUser.providerData.some(\n      data => data.providerId === 'facebook.com'\n    ),\n  });\n\n  const updateIsConnected = (providerId, value) => {\n    setisConnected(p => {\n      return {\n        ...p,\n        [providerId]: value,\n      };\n    });\n  };\n\n  const unLink = async providerId => {\n    try {\n      if (auth.currentUser.providerData.length === 1) {\n        throw new Error(`You Cannot disconnect from ${providerId}`);\n      }\n      await auth.currentUser.unlink(providerId);\n      updateIsConnected(providerId, false);\n      Alert.info(`Disconnected from ${providerId}`, 4000);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const Link = async provider => {\n    try {\n      await auth.currentUser.linkWithPopup(provider);\n      Alert.info(`Link to ${provider.providerId} successfully`, 4000);\n      updateIsConnected(provider.providerId, true);\n    } catch (err) {\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const unLinkFacbook = () => {\n    unLink('facebook.com');\n  };\n  const LinkFacbook = () => {\n    Link(new firebase.auth.FacebookAuthProvider());\n  };\n\n  const unLinkGoogle = () => {\n    unLink('google.com');\n  };\n  const LinkGoogle = () => {\n    Link(new firebase.auth.GoogleAuthProvider());\n  };\n\n  return (\n    <div>\n      {isConnected['google.com'] && (\n        <Tag color=\"green\" closable onClose={unLinkGoogle}>\n          <Icon icon=\"google\" /> Connected\n        </Tag>\n      )}\n      {isConnected['facebook.com'] && (\n        <Tag color=\"blue\" closable onClose={unLinkFacbook}>\n          <Icon icon=\"facebook\" /> Connected\n        </Tag>\n      )}\n      <div className=\"mt-2\">\n        {!isConnected['google.com'] && (\n          <Button color=\"green\" block onClick={LinkGoogle}>\n            <Icon icon=\"google\" /> Link to Google\n          </Button>\n        )}\n        {!isConnected['facebook.com'] && (\n          <Button color=\"blue\" block onClick={LinkFacbook}>\n            <Icon icon=\"facebook\" /> Link to FaceBook\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProviderBlock;\n","// /* eslint-disable */\nimport React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\nimport { useProfile } from '../../context/profile.context';\nimport { database } from '../../misc/firebase';\nimport EditableInput from '../EditableInput';\nimport AvatarUploadbtn from './AvatarUploadbtn';\nimport { getUserUpdates } from '../../misc/helpers';\n\nimport ProviderBlock from './ProviderBlock';\n\nconst DashBoard = ({ onSignOut }) => {\n  const { profile } = useProfile();\n  const onSave = async newData => {\n    try {\n      const updates = await getUserUpdates(\n        profile.uid,\n        'name',\n        newData,\n        database\n      );\n\n      await database.ref().update(updates);\n\n      Alert.success('NickName has been Updated', 4000);\n    } catch (error) {\n      Alert.error(error.message, 4000);\n    }\n  };\n\n  return (\n    <>\n      <Drawer.Header>\n        <Drawer.Title>DashBoard</Drawer.Title>\n      </Drawer.Header>\n\n      <Drawer.Body>\n        <h3>Hey {profile.name}</h3>\n        <ProviderBlock />\n        <Divider />\n        <EditableInput\n          name=\"nickname\"\n          // initalValue={profile.name}\n          initialValue={profile.name}\n          onSave={onSave}\n          label={<h6 className=\"mb-2\">Nickname</h6>}\n        />\n        <AvatarUploadbtn />\n      </Drawer.Body>\n\n      <Drawer.Footer>\n        <Button block color=\"red\" onClick={onSignOut}>\n          SignOut\n        </Button>\n      </Drawer.Footer>\n    </>\n  );\n};\n\nexport default DashBoard;\n","/* eslint-disable arrow-body-style */\nimport React, { useCallback } from 'react';\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\nimport { useMediaQuery, useModalState } from '../../misc/CustomHooks';\nimport Dashboard from '.';\nimport { auth, database } from '../../misc/firebase';\nimport { isOfflineForDatabase } from '../../context/profile.context';\n\nconst DashboardToggle = () => {\n  const { isOpen, close, open } = useModalState();\n  const isMobile = useMediaQuery('(max-width:992px)');\n\n  const onSignOut = useCallback(() => {\n    database\n      .ref(`/status/${auth.currentUser.uid}`)\n      .set(isOfflineForDatabase)\n      .then(() => {\n        auth.signOut();\n        Alert.info('Signed out', 4000);\n\n        close();\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  }, [close]);\n\n  return (\n    <div>\n      <Button block color=\"blue\" onClick={open}>\n        <Icon icon=\"dashboard\" /> DashBoard\n      </Button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\n        <Dashboard onSignOut={onSignOut} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default DashboardToggle;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { database } from '../misc/firebase';\nimport { transformToArrwithId } from '../misc/helpers';\n\nconst RoomsContext = createContext();\n\nexport const RoomsProvider = ({ children }) => {\n  const [rooms, setrooms] = useState(null);\n\n  useEffect(() => {\n    const roomListRef = database.ref('rooms');\n\n    roomListRef.on('value', snap => {\n      const data = transformToArrwithId(snap.val());\n      setrooms(data);\n    });\n\n    return () => {\n      roomListRef.off();\n    };\n  }, []);\n\n  return (\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\n  );\n};\n\nexport const useRooms = () => useContext(RoomsContext);\n","/* eslint-disable */\nimport React from 'react';\nimport TimeAgo from 'timeago-react';\nimport ProfileAvatar from '../ProfileAvatar';\n\nconst RoomItem = ({ room }) => {\n  const { createdAt, name, lastMessage } = room;\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h3 className=\"text-disappear\">{name}</h3>\n        <TimeAgo\n          datetime={\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\n          }\n          className=\"font-normal text-black-45\"\n        />\n      </div>\n\n      <div>\n        {lastMessage ? (\n          <>\n            <div className=\"d-flex align-items-center\">\n              <ProfileAvatar\n                src={lastMessage.author.avatar}\n                name={lastMessage.author.name}\n                size=\"sm\"\n              />\n            </div>\n            <div className=\"text-disappear ml-2\">\n              <div className=\"italic\">{lastMessage.author.name}</div>\n              <span>{lastMessage.text || lastMessage.file.name}</span>\n            </div>\n          </>\n        ) : (\n          <span className=\"d-flex align-items-center text-black-70\">\n            No Messages\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomItem;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader, Nav } from 'rsuite';\nimport NavItem from 'rsuite/lib/Nav/NavItem';\nimport { useRooms } from '../../context/rooms.context';\nimport RoomItem from './RoomItem';\n\nconst ChatRoomList = ({ aboveElHeight }) => {\n  const rooms = useRooms();\n  const location = useLocation();\n\n  return (\n    <Nav\n      appearance=\"subtle\"\n      vertical\n      reversed\n      className=\"overflow-y-scroll custom-scroll\"\n      style={{\n        height: `calc(100% - ${aboveElHeight}px)`,\n      }}\n      activeKey={location.pathname}\n    >\n      {!rooms && (\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\n      )}\n      {rooms &&\n        rooms.length > 0 &&\n        rooms.map(room => (\n          <NavItem\n            componentClass={Link}\n            to={`/chat/${room.id}`}\n            key={room.id}\n            eventKey={`/chat/${room.id}`}\n          >\n            <RoomItem room={room} />\n          </NavItem>\n        ))}\n    </Nav>\n  );\n};\n\nexport default ChatRoomList;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Divider } from 'rsuite';\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\nimport DashboardToggle from './dashboard/DashboardToggle';\nimport ChatRoomList from './rooms/ChatRoomList';\n\nconst Sidebar = () => {\n  const topSidebarRef = useRef();\n  const [height, setheight] = useState(0);\n\n  useEffect(() => {\n    if (topSidebarRef.current) {\n      setheight(topSidebarRef.current.scrollHeight);\n    }\n  }, [topSidebarRef]);\n\n  return (\n    <div className=\"h-100 pt-2\">\n      <div ref={topSidebarRef}>\n        <DashboardToggle />\n        <CreateRoomBtnModal />\n        <Divider>Join Conversation</Divider>\n      </div>\n      <ChatRoomList aboveElHeight={height} />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/CustomHooks';\nimport ProfileAvatar from '../../ProfileAvatar';\n\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\n  const { isOpen, open, close } = useModalState();\n  const { name, avatar, createdAt } = profile;\n  const shortName = profile.name.split(' ')[0];\n\n  const memberSince = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <>\n      <Button onClick={open} {...btnProps}>\n        {shortName}\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{shortName} profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <ProfileAvatar\n            src={avatar}\n            name={name}\n            className=\"width-200 height-200 img-fullsize font-huge\"\n          />\n          <h4 className=\"mt-2\">{name}</h4>\n          <p>Member Since {memberSince}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          {children}\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileInfoBtnModal;\n","import React from 'react';\nimport { Badge, Tooltip, Whisper } from 'rsuite';\nimport { usePresence } from '../misc/CustomHooks';\n\nconst getColor = presence => {\n  if (!presence) {\n    return 'gray';\n  }\n  switch (presence.state) {\n    case 'online':\n      return 'green';\n    case 'offline':\n      return 'red';\n\n    default:\n      return 'gray';\n  }\n};\n\nconst getText = presence => {\n  if (!presence) {\n    return 'Unknown State';\n  }\n  return presence.state === 'online'\n    ? 'Online'\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\n};\n\nconst PresenceDot = ({ uid }) => {\n  const presence = usePresence(uid);\n\n  return (\n    <Whisper\n      placement=\"top\"\n      trigger=\"hover\"\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\n    >\n      <Badge\n        className=\"cursor-pointer\"\n        style={{ backgroundColor: getColor(presence) }}\n      />\n    </Whisper>\n  );\n};\n\nexport default PresenceDot;\n","import React from 'react';\nimport { createContext, useContextSelector } from 'use-context-selector';\n\nconst CurrentRoomContext = createContext();\n\nexport const CurrentRoomProvider = ({ children, data }) => (\n  <CurrentRoomContext.Provider value={data}>\n    {children}\n  </CurrentRoomContext.Provider>\n);\n\nexport const useCurrentRoom = selector =>\n  useContextSelector(CurrentRoomContext, selector);\n","import React from 'react';\nimport { Modal } from 'rsuite';\nimport { useModalState } from '../../../misc/CustomHooks';\n\nconst ImageBtnModal = ({ src, fileName }) => {\n  const { isOpen, open, close } = useModalState();\n  return (\n    <>\n      <input\n        type=\"image\"\n        src={src}\n        alt=\"file\"\n        onClick={open}\n        className=\"mw-100 mh-100 w-auto\"\n      />\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>{fileName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n            View Original\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageBtnModal;\n","import React from 'react';\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\n\nconst ConditionalBadge = ({ condition, children }) =>\n  condition ? <Badge content={condition}>{children}</Badge> : children;\nconst IconBtnControl = ({\n  isVisible,\n  iconName,\n  tooltip,\n  onClick,\n  badgeContent,\n  ...props\n}) => (\n  <div\n    className=\"ml-2\"\n    style={{ visibility: isVisible ? 'visible' : 'hidden' }}\n  >\n    <ConditionalBadge condition={badgeContent}>\n      <Whisper\n        placement=\"top\"\n        delay={0}\n        delayHide={0}\n        delayShow={0}\n        trigger=\"hover\"\n        speaker={<Tooltip>{tooltip}</Tooltip>}\n      >\n        <IconButton\n          {...props}\n          onClick={onClick}\n          cirlce\n          size=\"xs\"\n          icon={<Icon icon={iconName} />}\n        />\n      </Whisper>\n    </ConditionalBadge>\n  </div>\n);\n\nexport default IconBtnControl;\n","import React, { memo } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { Button } from 'rsuite';\nimport ProfileAvatar from '../../ProfileAvatar';\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\nimport PresenceDot from '../../PresenceDot';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { auth } from '../../../misc/firebase';\nimport { useHover, useMediaQuery } from '../../../misc/CustomHooks';\nimport ImageBtnModal from './ImageBtnModal';\nimport IconBtnControl from './IconBtnControl';\n\nconst renderFileMessage = file => {\n  if (file.contentType.includes('image')) {\n    return (\n      <div className=\"height-220\">\n        <ImageBtnModal src={file.url} fileName={file.name} />\n      </div>\n    );\n  }\n\n  if (file.contentType.includes('audio')) {\n    return (\n      //  eslint-disable-next-line jsx-a11y/media-has-caption\n      <audio controls>\n        <source src={file.url} type=\"audio/mp3\" />\n        Your Browser doesnot support the audio element\n      </audio>\n    );\n  }\n  return <a href={file.url}>DownLoad {file.name}</a>;\n};\n\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\n  const { author, createdAt, text, file, likes, likeCount } = message;\n\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const admins = useCurrentRoom(v => v.admins);\n\n  const [selfRef, isHovered] = useHover();\n\n  const isMobile = useMediaQuery('max-with:992px');\n\n  const isMsgAuthorAdmin = admins.includes(author.uid);\n\n  const isAuthor = auth.currentUser.uid === author.uid;\n\n  const canGrantAdmin = isAdmin && !isAuthor;\n\n  const canShowIcons = isMobile || isHovered;\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\n\n  return (\n    <li\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\n      ref={selfRef}\n    >\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\n        <PresenceDot uid={author.uid} />\n        <ProfileAvatar\n          src={author.avatar}\n          name={author.name}\n          className=\"ml-1\"\n          size=\"xs\"\n        />\n        <span className=\"ml-2\">\n          <ProfileInfoBtnModal\n            profile={author}\n            appearance=\"link\"\n            className=\"p-0 ml-1 text-black\"\n          >\n            {canGrantAdmin && (\n              <Button\n                block\n                onClick={() => handleAdmin(author.uid)}\n                color=\"blue\"\n              >\n                {isMsgAuthorAdmin\n                  ? 'Remove admin permission'\n                  : 'Give admin in this room'}\n              </Button>\n            )}\n          </ProfileInfoBtnModal>\n        </span>\n        <TimeAgo\n          datetime={createdAt}\n          className=\"font-normal text-black-45 ml-2\"\n        />\n        <IconBtnControl\n          {...(isLiked ? { color: 'red' } : {})}\n          isVisible={canShowIcons}\n          iconName=\"heart\"\n          tooltip=\"Like this message\"\n          onClick={() => handleLike(message.id)}\n          badgeContent={likeCount}\n        />\n        {isAuthor && (\n          <IconBtnControl\n            isVisible={canShowIcons}\n            iconName=\"close\"\n            tooltip=\"Delete this message\"\n            onClick={() => handleDelete(message.id, file)}\n          />\n        )}\n      </div>\n      <div>\n        {text && <span className=\"word-break-all\">{text}</span>}\n        {file && renderFileMessage(file)}\n      </div>\n    </li>\n  );\n};\nexport default memo(MessageItem);\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button } from 'rsuite';\nimport { auth, database, storage } from '../../../misc/firebase';\nimport { groupBy, transformToArrwithId } from '../../../misc/helpers';\nimport MessageItem from './MessageItem';\n\nconst PAGE_SIZE = 15;\nconst messagesRef = database.ref('/messages');\n\nfunction shouldScrollToBottom(node, threshold = 30) {\n  const percentage =\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\n\n  return percentage > threshold;\n}\n\nconst Messages = () => {\n  const { chatId } = useParams();\n  const [messages, setMessages] = useState(null);\n  const [limit, setLimit] = useState(PAGE_SIZE);\n  const selfRef = useRef();\n\n  const isChatEmpty = messages && messages.length === 0;\n  const canShowMessages = messages && messages.length > 0;\n\n  const loadMessage = useCallback(\n    limitToLast => {\n      const node = selfRef.current;\n\n      messagesRef.off();\n\n      messagesRef\n        .orderByChild('roomId')\n        .equalTo(chatId)\n        .limitToLast(limitToLast || PAGE_SIZE)\n        .on('value', snap => {\n          const data = transformToArrwithId(snap.val());\n\n          setMessages(data);\n          if (shouldScrollToBottom(node)) {\n            node.scrollTop = node.scrollHeight;\n          }\n        });\n\n      setLimit(p => p + PAGE_SIZE);\n    },\n    [chatId]\n  );\n\n  const onLoadMore = useCallback(() => {\n    const node = selfRef.current;\n    const oldHeight = node.scrollHeight;\n\n    loadMessage(limit);\n    setTimeout(() => {\n      const newHeight = node.scrollHeight;\n      node.scrollTop = newHeight - oldHeight;\n    }, 200);\n  }, [limit, loadMessage]);\n\n  useEffect(() => {\n    const node = selfRef.current;\n\n    loadMessage();\n\n    setTimeout(() => {\n      node.scrollTop = node.scrollHeight;\n    }, 200);\n\n    return () => {\n      messagesRef.off('value');\n    };\n  }, [loadMessage]);\n\n  const handleAdmin = useCallback(\n    async uid => {\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\n      let alertMsg;\n      await adminsRef.transaction(admins => {\n        if (admins) {\n          if (admins[uid]) {\n            admins[uid] = null;\n            alertMsg = 'Admin Permission removed';\n          } else {\n            admins[uid] = true;\n            alertMsg = 'Admin Permission Granted';\n          }\n        }\n        return admins;\n      });\n      Alert.info(alertMsg, 4000);\n    },\n    [chatId]\n  );\n\n  const handleLike = useCallback(async msgId => {\n    const { uid } = auth.currentUser;\n    const messageRef = database.ref(`/messages/${msgId}`);\n    let alertMsg;\n    await messageRef.transaction(msg => {\n      if (msg) {\n        if (msg.likes && msg.likes[uid]) {\n          msg.likeCount -= 1;\n          msg.likes[uid] = null;\n          alertMsg = 'Like Removed';\n        } else {\n          msg.likeCount += 1;\n\n          if (!msg.likes) {\n            msg.likes = {};\n          }\n\n          msg.likes[uid] = true;\n          alertMsg = 'Like Added';\n        }\n      }\n      return msg;\n    });\n    Alert.info(alertMsg, 4000);\n  }, []);\n\n  const handleDelete = useCallback(\n    async (msgId, file) => {\n      // eslint-disable-next-line no-alert\n      if (!window.confirm(`Delete this message ? `)) {\n        return;\n      }\n\n      const isLast = messages[messages.length - 1].id === msgId;\n\n      const updates = {};\n\n      updates[`/messages/${msgId}`] = null;\n\n      if (isLast && messages.length > 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = {\n          ...messages[messages.length - 2],\n          msgId: messages[messages.length - 2].id,\n        };\n      }\n      if (isLast && messages.length === 1) {\n        updates[`/rooms/${chatId}/lastMessage`] = null;\n      }\n\n      try {\n        await database.ref().update(updates);\n        Alert.info('Message Deleted Successfully', 4000);\n      } catch (err) {\n        // eslint-disable-next-line consistent-return\n        return Alert.error(err.message, 4000);\n      }\n      if (file) {\n        try {\n          const fileRef = await storage.refFromURL(file.url);\n          await fileRef.delete();\n        } catch (err) {\n          Alert.error(err.message, 4000);\n        }\n      }\n    },\n    [chatId, messages]\n  );\n\n  const renderMessages = () => {\n    const groups = groupBy(messages, item =>\n      new Date(item.createdAt).toDateString()\n    );\n\n    const items = [];\n\n    Object.keys(groups).forEach(date => {\n      items.push(\n        <li key={date} className=\"text-center mb-1 padded\">\n          {date}\n        </li>\n      );\n\n      const msgs = groups[date].map(msg => (\n        <MessageItem\n          key={msg.id}\n          message={msg}\n          handleAdmin={handleAdmin}\n          handleLike={handleLike}\n          handleDelete={handleDelete}\n        />\n      ));\n\n      items.push(...msgs);\n    });\n\n    return items;\n  };\n  return (\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\n      {messages && messages.length >= PAGE_SIZE && (\n        <li className=\"text-center mt-2 mb-2\">\n          <Button onClick={onLoadMore} color=\"green\">\n            Load More\n          </Button>\n        </li>\n      )}\n      {isChatEmpty && <li>No Messages Yet</li>}\n      {canShowMessages && renderMessages()}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import React, { memo } from 'react';\nimport { Button, Modal } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useModalState } from '../../../misc/CustomHooks';\n\nconst RoominfoBtnModal = () => {\n  const { isOpen, close, open } = useModalState();\n  const description = useCurrentRoom(v => v.description);\n  const name = useCurrentRoom(v => v.name);\n\n  return (\n    <>\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\n        Room Information\n      </Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>About {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h6 className=\"mb-1\">Description</h6>\n          <p>{description}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default memo(RoominfoBtnModal);\n","import React, { memo } from 'react';\nimport { Alert, Button, Drawer } from 'rsuite';\nimport { useParams } from 'react-router';\nimport { useMediaQuery, useModalState } from '../../../misc/CustomHooks';\nimport EditableInput from '../../EditableInput';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { database } from '../../../misc/firebase';\n\nconst EditRoomBtnDrawer = () => {\n  const { isOpen, open, close } = useModalState();\n  const isMobile = useMediaQuery('max-width: 992px');\n\n  const name = useCurrentRoom(v => v.name);\n  const description = useCurrentRoom(v => v.description);\n\n  const { chatId } = useParams();\n\n  const updateData = (key, value) => {\n    database\n      .ref(`rooms/${chatId}`)\n      .child(key)\n      .set(value)\n      .then(() => {\n        Alert.success('SuccessFully updated', 4000);\n      })\n      .catch(err => {\n        Alert.error(err.message, 4000);\n      });\n  };\n\n  const onNameSave = newName => {\n    updateData('name', newName);\n  };\n\n  const onDescriptionSave = newDescription => {\n    updateData('desciption', newDescription);\n  };\n\n  return (\n    <div>\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\n        A\n      </Button>\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\n        <Drawer.Header>\n          <Drawer.Title>Edit Room</Drawer.Title>\n        </Drawer.Header>\n        <Drawer.Body>\n          <EditableInput\n            initialValue={name}\n            onSave={onNameSave}\n            label={<h6 className=\"mb-2\">Name</h6>}\n            emptyMsg=\"Name cannot be Empty\"\n          />\n          <EditableInput\n            componentClass=\"textarea\"\n            rows={5}\n            initialValue={description}\n            onSave={onDescriptionSave}\n            emptyMsg=\"Description Cannot be Empty\"\n            wrapperClassName=\"mt-3\"\n          />\n        </Drawer.Body>\n        <Drawer.Footer>\n          <Button block onClick={close}>\n            Close\n          </Button>\n        </Drawer.Footer>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default memo(EditRoomBtnDrawer);\n","import React, { memo } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { ButtonToolbar, Icon } from 'rsuite';\nimport { useCurrentRoom } from '../../../context/current-room.context';\nimport { useMediaQuery } from '../../../misc/CustomHooks';\nimport RoominfoBtnModal from './RoominfoBtnModal';\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\n\nconst Top = () => {\n  const name = useCurrentRoom(v => v.name);\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\n  const isMobile = useMediaQuery('(max-width:992px)');\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h4 className=\"text-disappear d-flex align-items-center\">\n          <Icon\n            componentClass={Link}\n            to=\"/\"\n            icon=\"arrow-circle-left\"\n            size=\"2x\"\n            className={\n              isMobile\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\n                : 'd-none'\n            }\n          />\n          <span className=\"text-disappear\">{name}</span>\n        </h4>\n        <ButtonToolbar className=\"ws-nowrap\">\n          {isAdmin && <EditRoomBtnDrawer />}\n        </ButtonToolbar>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <span>todo</span>\n        <RoominfoBtnModal />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Top);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\nimport { useModalState } from '../../../misc/CustomHooks';\nimport { storage } from '../../../misc/firebase';\n\nconst MAX_FILE_SIZE = 1000 * 1204 * 5;\n\nconst AttachmentBtnModal = ({ afterUpload }) => {\n  const { chatId } = useParams();\n  const { isOpen, open, close } = useModalState();\n  const [FileList, setFileList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChange = fileArr => {\n    const filtered = fileArr\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\n      .slice(0, 5);\n    setFileList(filtered);\n  };\n\n  const onUpload = async () => {\n    try {\n      const uploadPromises = FileList.map(f =>\n        storage\n          .ref(`/chat/${chatId}`)\n          .child(Date.now() + f.name)\n          .put(f.blobFile, { cacheControl: `public,max-age=${3600 * 24 * 3}` })\n      );\n\n      const uploadSnapshots = await Promise.all(uploadPromises);\n\n      const shapePromises = uploadSnapshots.map(async snap => ({\n        contentType: snap.metadata.contentType,\n        name: snap.metadata.name,\n        url: await snap.ref.getDownloadURL(),\n      }));\n      const files = await Promise.all(shapePromises);\n\n      await afterUpload(files);\n\n      setIsLoading(false);\n      close();\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  return (\n    <>\n      <InputGroup.Button onClick={open}>\n        <Icon icon=\"attachment\" />\n      </InputGroup.Button>\n      <Modal show={isOpen} onHide={close}>\n        <Modal.Header>\n          <Modal.Title>Upload Files</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Uploader\n            autoUpload={false}\n            action=\"\"\n            fileList={FileList}\n            onChange={onChange}\n            multiple\n            listType=\"picture-text\"\n            className=\"w-100\"\n            disabled={isLoading}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button block disabled={isLoading} onClick={onUpload}>\n            Send to Chat\n          </Button>\n          <div className=\"text-right mt-2\">\n            <small>* on files less than 5 mb are allowed</small>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AttachmentBtnModal;\n","import React, { useCallback, useState } from 'react';\nimport { Alert, Icon, InputGroup } from 'rsuite';\nimport { ReactMic } from 'react-mic';\nimport { useParams } from 'react-router';\nimport { storage } from '../../../misc/firebase';\n\nconst AudioMsgBtn = ({ afterUpload }) => {\n  const { chatId } = useParams();\n\n  const [isRecording, setIsRecording] = useState(false);\n\n  const [isUploading, setIsUploading] = useState(false);\n\n  const onClick = useCallback(() => {\n    setIsRecording(p => !p);\n  }, []);\n\n  const onUpload = useCallback(\n    async data => {\n      setIsUploading(true);\n      try {\n        const snap = await storage\n          .ref(`/chat/${chatId}`)\n          .child(`audio_${Date.now()}.mp3`)\n          .put(data.blob, {\n            cacheControl: `public,max-age=${3600 * 24 * 3}`,\n          });\n\n        const file = {\n          contentType: snap.metadata.contentType,\n          name: snap.metadata.name,\n          url: await snap.ref.getDownloadURL(),\n        };\n\n        setIsUploading(false);\n        afterUpload([file]);\n      } catch (err) {\n        setIsUploading(false);\n        Alert.error(err.message, 4000);\n      }\n    },\n    [afterUpload, chatId]\n  );\n\n  return (\n    <InputGroup.Button\n      onClick={onClick}\n      disabled={isUploading}\n      className={isRecording ? 'animate-blink' : ''}\n    >\n      <Icon icon=\"microphone\" />\n      <ReactMic\n        record={isRecording}\n        className=\"d-none\"\n        onStop={onUpload}\n        mimeType=\"audio/mp3\"\n      />\n    </InputGroup.Button>\n  );\n};\n\nexport default AudioMsgBtn;\n","import React, { useCallback, useState } from 'react';\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\nimport firebase from 'firebase/app';\nimport { useParams } from 'react-router';\nimport { useProfile } from '../../../context/profile.context';\nimport { database } from '../../../misc/firebase';\nimport AttachmentBtnModal from './AttachmentBtnModal';\nimport AudioMsgBtn from './AudioMsgBtn';\n\nfunction assembleMessage(profile, chatId) {\n  return {\n    roomId: chatId,\n    author: {\n      name: profile.name,\n      uid: profile.uid,\n      createdAt: profile.createdAt,\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\n    },\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\n    likeCount: 0,\n  };\n}\n\nconst Bottom = () => {\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { chatId } = useParams();\n  const { profile } = useProfile();\n\n  const onInputChange = useCallback(value => {\n    setInput(value);\n  }, []);\n\n  const onSendClick = async () => {\n    if (input.trim() === '') {\n      return;\n    }\n    const msgData = assembleMessage(profile, chatId);\n    msgData.text = input;\n\n    const updates = {};\n\n    const messageId = database.ref('messages').push().key;\n\n    updates[`/messages/${messageId}`] = msgData;\n    updates[`/rooms/${chatId}/lastMessage`] = {\n      ...msgData,\n      msgId: messageId,\n    };\n\n    setIsLoading(true);\n    try {\n      await database.ref().update(updates);\n      setInput('');\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      Alert.error(err.message, 4000);\n    }\n  };\n\n  const onKeyDown = ev => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      onSendClick();\n    }\n  };\n\n  const afterUpload = useCallback(\n    async files => {\n      setIsLoading(true);\n      const updates = {};\n      files.forEach(file => {\n        const msgData = assembleMessage(profile, chatId);\n        msgData.file = file;\n\n        const messageId = database.ref('messages').push().key;\n\n        updates[`/messages/${messageId}`] = msgData;\n      });\n\n      const lastMsgId = Object.keys(updates).pop();\n      updates[`/rooms/${chatId}/lastMessage`] = {\n        ...updates[lastMsgId],\n        msgId: lastMsgId,\n      };\n      try {\n        await database.ref().update(updates);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        Alert.error(err.message, 4000);\n      }\n    },\n    [chatId, profile]\n  );\n\n  return (\n    <div>\n      <InputGroup>\n        <AttachmentBtnModal afterUpload={afterUpload} />\n        <AudioMsgBtn afterUpload={afterUpload} />\n        <Input\n          placeholder=\"Write a new message here ...\"\n          value={input}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n        />\n\n        <InputGroup.Button\n          color=\"blue\"\n          appearance=\"primary\"\n          onClick={onSendClick}\n          disabled={isLoading}\n        >\n          <Icon icon=\"send\" />\n        </InputGroup.Button>\n      </InputGroup>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React from 'react';\nimport { useParams } from 'react-router';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Loader } from 'rsuite';\nimport Messages from '../../components/chat-window/messages';\nimport ChatTop from '../../components/chat-window/top';\nimport ChatBottom from '../../components/chat-window/bottom';\nimport { useRooms } from '../../context/rooms.context';\nimport { CurrentRoomProvider } from '../../context/current-room.context';\nimport { transformToArr } from '../../misc/helpers';\nimport { auth } from '../../misc/firebase';\n\nconst Chat = () => {\n  const { chatId } = useParams();\n\n  const rooms = useRooms();\n\n  if (!rooms) {\n    return <Loader vertical size=\"md\" contet=\"Loading\" speen=\"slow\" />;\n  }\n\n  const currentRoom = rooms.find(room => room.id === chatId);\n\n  if (!currentRoom) {\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\n  }\n\n  const { name, description } = currentRoom;\n\n  const admins = transformToArr(currentRoom.admins);\n\n  const isAdmin = admins.includes(auth.currentUser.uid);\n  const currentRoomData = {\n    name,\n    description,\n    admins,\n    isAdmin,\n  };\n\n  return (\n    <CurrentRoomProvider data={currentRoomData}>\n      <div className=\"chat-top\">\n        <ChatTop />\n      </div>\n      <div className=\"chat-middle\">\n        <Messages />\n      </div>\n      <div className=\"chat-bottom\">\n        <ChatBottom />\n      </div>\n    </CurrentRoomProvider>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Col, Grid, Row } from 'rsuite';\n\nimport { Route, Switch, useRouteMatch } from 'react-router';\nimport Sidebar from '../../components/Sidebar';\nimport { RoomsProvider } from '../../context/rooms.context';\nimport Chat from './Chat';\nimport { useMediaQuery } from '../../misc/CustomHooks';\n\nconst Index = () => {\n  const isDesktop = useMediaQuery('(min-width:992px)');\n\n  const { isExact } = useRouteMatch();\n\n  const canRenderSidebar = isDesktop || isExact;\n\n  return (\n    <RoomsProvider>\n      <Grid fluid className=\"h-100\">\n        <Row className=\"h-100\">\n          {canRenderSidebar && (\n            <Col xs={24} md={8} className=\"h-100\">\n              <Sidebar />\n            </Col>\n          )}\n          <Switch>\n            <Route exact path=\"/chat/:chatId\">\n              <Col xs={24} md={16} className=\"h-100\">\n                <Chat />\n              </Col>\n            </Route>\n            <Route>\n              {isDesktop && (\n                <Col xs={24} md={8} className=\"h-100\">\n                  <h6 className=\"text-center mt-page\">Please Select Chat</h6>\n                </Col>\n              )}\n            </Route>\n          </Switch>\n        </Row>\n      </Grid>\n    </RoomsProvider>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nfunction PrivateRoute({ children, ...routeProps }) {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (!profile && !isLoading) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n}\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { Container, Loader } from 'rsuite';\nimport { useProfile } from '../context/profile.context';\n\nfunction PublicRoute({ children, ...routeProps }) {\n  const { profile, isLoading } = useProfile();\n\n  if (isLoading && !profile) {\n    return (\n      <Container>\n        <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\n      </Container>\n    );\n  }\n\n  if (profile && !isLoading) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <Route {...routeProps}>{children}</Route>;\n}\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Signin from './pages/Signin';\nimport Index from './pages/Home';\nimport './styles/main.scss';\nimport PrivateRotue from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <Signin />\n        </PublicRoute>\n        <PrivateRotue path=\"/\">\n          <Index />\n        </PrivateRotue>\n      </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}